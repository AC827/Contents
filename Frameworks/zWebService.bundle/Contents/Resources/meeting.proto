package com.saasbee.webapp.proto;

option java_package = "com.saasbee.webapp.proto";
option java_outer_classname = "MeetingProtos";
option optimize_for = LITE_RUNTIME;

message AttendeeProto {
  optional string email       = 1;
  optional string displayName = 2; 
  optional string picUrl      = 3;
  optional string userId      = 4;
}

message AttendeeListProto {
  repeated AttendeeProto attendee = 1;
}

message CountryCodeProto {
  optional string id     = 1; // country id, such as 'CA' for Canada
  optional string name   = 2; // country name, such as 'Canada'
  optional string code   = 3; // country code, such as '+1'
  optional string number = 4; // call-in number (not formatted as zoomconference page), such as '+1 6475580588'
  optional string displayNumber = 5; // call-in display number (formatted as zoomconference page), such as '+1 647 558 0588', new client should use this
  optional int32 callType  = 6; //0: toll, 1: toll-free, 10: premium
  
}

message CountryCodeListProto {
  repeated CountryCodeProto countryCode = 1;
}

message H323DeviceProto{
  enum DeviceType {
    H323  = 1;
    SIP   = 2;
    BOTH  = 3;
  }
  enum EncryptType {
    NO = 0;
    YES      = 1;
    AUTO     = 2;
  }
  required string deviceName=1;
  required string deviceIp=2;
  required DeviceType deviceType=3;  //1 H.323  2 SIP  3 Both
  optional EncryptType encryptType=4; //0 NO 1 Yes 2 Auto
  optional string e164number=5;
}

message RCProto{
  required string ip =1;
  required string token=2;
}

message MeetingProto {
  enum Status {
    NOT_START  = 0;
    IN_PROCESS = 1;
    FINISHED   = 2;
  }
  enum MeetingType {
    PRE_SCHEDULE = 0;
    INSTANT      = 1;
    SCHEDULE     = 2;
    REPEAT       = 3;
  }
  enum ExtendMeetingType {
    NORMAL  = 0;
    PMI     = 1;
    WEBINAR = 2;
  }
  enum CalloutType {
    NONE          = 0;
    US_ONLY       = 1;
    INTERNATIONAL = 2;
  }
  enum WaitMeetingStatus {
	NO_WAITING = 0;
	OUT_12_HOURS = 1;
	IN_12_HOURS = 2;
	IN_PRACTICE_SESSION = 3;
  }
  optional string id                     = 1;
  optional string hostId                 = 2;
  optional string hostName               = 3;
  optional string topic                  = 4;
  optional string password               = 5;
  optional Status status                 = 6;
  optional int64  startTime              = 7; // scheduled start time, not actual start time
  optional int32  duration               = 8;
  optional int64  options                = 9; // client options, not used in web backend
  optional string pingServer             = 10; // ping zc list
  optional string token                  = 11;
  optional int64  meetingNumber          = 12;
  optional AttendeeListProto attendees   = 13;
  optional string agenda                 = 14;
  optional int64  lastModified           = 15;
  optional int32  phoneId                = 16; // attendee ID for teleconference
  optional string callinNumber           = 17; // US call in number if enabled PSTN
  optional string hostZC                 = 18;
  optional string topMMR                 = 19;
  optional MeetingType type              = 20;
  optional int32  hasPassword            = 21;
  optional string googleCalendarUrl      = 22;
  optional string gmailUrl               = 23;
  optional string yahooUrl               = 24;
  optional string inviteEmail            = 25; // doesn't include meeting time
  optional string inviteEmailWithTime    = 26; // include meeting time
  optional int32 isInternal              = 27; // internal meeting to start in hybrid cloud
  optional string joinUrl                = 28; // meeting join url
  optional int64 scheduleOptions         = 29; // schedule options
  repeated string inprogressMeetingId    = 30; // inprogress meeting ids
  optional int32 repeatType              = 31; // repeat type: daily, weekly, bi-weekly, monthly, etc
  optional int64 repeatEndTime           = 32; // end time of repeat meeting
  optional string timezone               = 33; // client's local timezone
  optional int32 hostType                = 34; // host sns type, default value -1
  optional string hostEmail              = 35; // host email address, default value is EMPTY
  optional string h323Gateway            = 36; // h323 gateway, delimiter: ";", default value is EMPTY
  optional int32 enablePSTN              = 37; // enablePSTN, 0/1, default value is 0
  optional string assistantId            = 38; // assistant user id
  optional int32 isViewOnlyJoin          = 39; // is view-only join, default value is 0
  optional int32 isSupportTollFree       = 40; // default value is 0
  optional string tollFreeCallInNumber   = 41; // toll free numbers, delimiter: ";", default value is EMPTY
  optional ExtendMeetingType exType      = 42; // extend meeting type for PMI, Webinar
  optional string h323Password           = 43; // pure digit password for H323 gateway join
  optional string teleConfUrl            = 44; // teleconference page url
  optional int32 meetingCapacity         = 45;
  optional string inviteEmailSubject     = 46; // branded invite email subject
  optional int32 pstnOptions             = 47; // pstn options: bit0-if need to confirm 1 to join meeting or not
  optional int32 needRegWebinar          = 48; // need to register webinar as attendee
  optional string webinarRegUrl          = 49; // webinar registration url
  optional string backupPingServer       = 50; // backup AWS ping zc list for Paid account
  optional int32 backupPingDelay         = 51; // backup AWS ping delay time in milliseconds
  optional string webinarJID             = 52; // webinar QA group JID
  optional int32 enableH323              = 53; // enable H323 join, 0/1, default 0
  optional CalloutType supportCallout    = 54; // support call-out type
  optional CountryCodeListProto calloutCountry = 55; // call-out country list
  optional CountryCodeListProto callinCountry  = 56; // call-in country and number list
  optional string otherTeleConfInfo      = 57; // other teleconference info
  optional int32 isAutoApprovalWebinar   = 58; // auto approve register webinar attendee flag. 1 means auto approval.
  optional int64 originalMtgNumber       = 59; // original meeting number which replaced by PMI
  optional string webinarToken           = 60; // webinar token
  repeated H323DeviceProto deviceList    = 61;  //h323/sip room list
  repeated RCProto crclist               = 62;
  repeated RCProto vrclist               = 63;
  optional string rawPassword            = 64; // raw plain meeting password
  repeated CountryCodeProto tollFreeCallInNumberList	= 65; // tollfree callin numbers
  optional string hostKey                = 66; //Host key for PSTN/H323 gateway, it is md5 string
  optional string tunnelServer           = 67; // ping tunnel server list, delimiter: ";"
  optional string expressTunnelServer    = 68; // ping express tunnel server list, delimiter: ";"
  optional WaitMeetingStatus statusExt   = 69; // when meeting status is waiting or webinar session practice is close. return 1 means scheduleTime - now > 12 hours.
  optional string defaultCallInCountry   = 70; // default call in country ID in user profile, default is US 
  optional string restrictJoinUserDomains   = 71; // Only signed-in users with specified domains can join meetings, delimiter: ";"
  optional string listenOnlyPassword     = 72; // pure digit listen only password for PAC meeting.
  repeated AlternativeHost alternativeHost   = 73; // alternative hostEmails and hostIds
  optional string feedBackUrl            = 74; // Webinar feed back url for attendees.
}

message MeetingListProto {
  repeated MeetingProto meeting = 1;
}

message FriendProto {
  optional string friendId  = 1; // sns (facebook) user id
  optional int32 friendType = 2; // 0 - facebook, 1 - ...
}

message FriendListProto {
  repeated FriendProto friend = 1;
}

message UserGroup {
  required string groupId = 1;
  required string name    = 2;
}

message BrandingInfo {  
  optional string backgroundImgUrl = 1;
}

message UserProfile {
  required string id          = 1;
  optional string name        = 2;
  optional string credential  = 3;
  optional string email       = 4;
  optional string picUrl      = 5;
  optional string snsId       = 6; // sns id
  optional int32 snsType      = 7; // sns type: 0-facebook, 1-google, 100-work email, 101-sso
  optional string accountId   = 8; // account id
  optional int32 role         = 9; // user role
  optional int32 userType     = 10; // user type: 1-free,2-paid,3-hybrid
  optional int32 accountType  = 11; // account type: 1-free,2-free trial,3-paid
  optional int32 canUpgrade   = 12; // can upgrade to paid user/account: 0/1
  optional int64 pmi          = 13; // PMI meeting number
  optional string vanityUrl   = 14; // PMI vanity Url
  optional string firstName   = 15;
  optional string lastName    = 16;
  optional int32 enableColocation = 17;
  optional string coRegion    = 18; // unused
  optional string roomName    = 19; // ZoomPresence resource name, such as "Room 403"
  optional int32 bindWithMobile = 20; // bind with mobile devices for XMPP
  optional string zoomJID       = 21; // mobile messenger or desktop IM JID for client, or webinar QA JID
  optional string zoomXmppToken = 22; // mobile messenger or desktop IM token for client, or webinar QA token
  repeated UserGroup group      = 23; // user groups for XMPP
  optional string roomAddr      = 24; // ZoomPresnece address, including protocol, IP and port, such as "tcp|pkg|rlb://10.110.6.8:9090"
  optional string roomToken     = 25; // ZoomPresence control token
  optional string addBuddyUrl   = 26; // add-buddy URL
  optional string addBuddyEmail = 27; // add-buddy email body
  optional string addBuddySubject = 28; // add-buddy email subject
  optional string roomPassword  = 29; // ZoomPresence password
  optional int32 disablePSTN    = 30; // disable PSTN, default 0
  optional int64 featureOptions = 31; // features enable/disable flag, use bit
  optional string roomResourceEmail  = 32; // ZoomPresence Resource Email
  optional string timezone      = 33; // user timezone, empty if user hasn't set on page
  optional string otherTeleConfInfo = 34; // other teleconference info
  optional string passcode      = 35; // passcode for BSC client
  repeated Rooms room = 36; // ZoomPresence Room list of the user
  optional string zpGoogleAccessToken = 37; // ZP access token for service account
  optional string exchangeRoomEmail = 38; //email address of room/resource in Exchange system
  optional string exchangeEMSURL = 39;  //URL of Exchange Web Service
  optional string exchangePassword = 40; //password of the email in Exchange system, not password of the work email in Zoom system
  optional string defaultCallinTollCountry = 41; //default call in country for toll numbers
  optional string exchangeDomain = 42; //domain in Exchange System
  optional BrandingInfo brandingInfo = 43;
  optional string restrictJoinUserDomains   = 44; // The account level restrict domains, use this for default value if user first time enable this option on schedule.
  optional int32 e2eLogoffTime     	 = 45; //e2e chat log off time
  optional string userHostKey         = 46; //user host key
  optional int64 featureOptions2 = 47; // features2 enable/disable flag, use bit
}

message Rooms {
  optional string roomName = 1; //zoom presence room name
  optional string roomEmail = 2; //zoom presence room email address
}

message CallProto {
  optional string id              = 1;
  optional string meetingId       = 2; // not used, web will get it from token
  optional string callingNumber   = 3;
  optional string calledNumber    = 4;
  optional int64 startTime        = 5;
  optional int64 endTime          = 6;
  optional string sipCallId       = 7;
  optional string topMMR          = 8;
  optional int64 callType         = 9;
  optional string originalSBC     = 10;
  optional string meetingNumber   = 11; // not used, web will get it from token
  optional string telGWAddr       = 12;
  optional string hostId          = 13; // not used, web will get it from token
  optional string reqId           = 14; // request uuid, should be a unique uuid
  optional string msSipCallId     = 15;
  optional string userInputMN     = 16;
  optional int32 endReason        = 17;
  optional string userData        = 18;
}

message MeetingStatusProto {
  enum Status {
    NOT_START  = 0;
    IN_PROCESS = 1;
    FINISHED   = 2;
  }
  enum Sender {
    MMZ = 0; // sender by MMZ ZC
    BCZ = 1; // sender by BCS
  }
  required Status status   = 1;
  required string token    = 2;
  optional int32 attendees = 3; // meeting attendees #
  optional int32 minutes   = 4; // meeting duration
  optional string topMMR   = 5;
  optional int32 meetingMinutes = 6; // actual meeting minutes
  repeated string attendeeList  = 7; // attendee list: {"id":"userid","name":"username","join":132413413243,"duration":55}, join is unix timestamp (seconds), duration is seconds
  repeated int32 sessions       = 8; // 1-audio, 2-AS, 3-video
  optional int32 createByHost   = 9; // meeting is create by host or not, 1-host create, 2-attendee create
  optional int32 attendeesViewOnly = 10; // unused
  optional Sender sender           = 11; // event sender
  optional string bcMtgInstanceId  = 12; // bc meeting instance uuid
}

message MeetingStatusListProto {
  enum Event {
    NORMAL        = 0; // normal status event
    ZONE_FAILOVER = 1; // zone failover event
    MMR_FAILOVER  = 2; // mmr failover event
  }
  repeated MeetingStatusProto status = 1; // meeting list to sync status
  optional string zc                 = 2; // zc address
  optional Event event               = 3; // event type
  optional string zone               = 4; // zone name
  optional string mmr                = 5; // top mmr address
  optional string accountId          = 6; // account id of hybrid cloud
  optional string signer             = 7; // ZCWebToken signer: hmac(zc+zone)
}

message TeleConfBridge {
  required string address = 1;
  repeated string tollCallInNumbers = 2;
  optional string tollFreeCallInNumber = 3;
}
message TeleConfParams {
  repeated TeleConfBridge teleConfBridges = 1;
}

message CreateTeleConfResult {
  required int32 result = 1;
  required string tollCallInNumbers = 2;
  optional string tollFreeCallInNumber = 3;
}

message MeetingToken {
  required string uuid            = 1; // meeting uuid
  required int64 createTime       = 2; // token create time
  required int32 timeToLive       = 3; // token ttl
  required string hostId          = 4; // host user id
  optional string hostName        = 6; // host user name
  optional string topic           = 5; // meeting topic
  optional int64 options          = 7; // meeting options
  optional int32 meetingType      = 8; // meeting type: 0-free, 1-paid, ...
  optional int32 role             = 9; // user role: 0-attendee, 1-host
  optional int64 meetingNumber    = 10; // meeting number
  optional int32 enablePSTN       = 11; // 0-disable PSTN, 1-enable PSTN
  optional string teleConfParams  = 12; // tele conf params in protobuf format
  optional int32 meetingCapacity  = 13; // capacity for max attendees per meeting, default is 25
}

/////////////////////////////
// deprecated
message UICommandProto {
  required string cmdType = 1; // p1
  required string action = 2; // p2
  optional string p3 = 3;
}
message UICommandListProto {
  optional string fid = 1;
  repeated UICommandProto cmd = 2;
}
/////////////////////////////

message LogProto {
  required string logTime = 1;
  optional string fid     = 2;
  required string cmd     = 3;
  required string source  = 4;
  optional string p1      = 5;
  optional string p2      = 6;
  optional string p3      = 7;
  optional string p4      = 8;
  optional string p5      = 9;
  optional string p6      = 10;
  optional int32  count	  = 11;          //repeat count, default value is 0.
  optional int32  clientSendState = 12;	 //client use only
}

message LogListProto {
  repeated LogProto log = 1;
}

message ContactProto {
  required string userId      = 1;
  required string email       = 2;
  optional string firstName   = 3;
  optional string lastName    = 4;
  optional string picUrl      = 5;
  optional string jid         = 6; // used for IM:
  optional int32 bindWithMobile = 7; // used for IM: if the contact binds with mobile device or not
  optional int32 isSameDomain   = 8; // is in same domain shared group
  optional int32 isSameAccount  = 9; // is in same account shared group
}

message ContactListProto {
  optional int32 count = 1;
  optional string hash = 2;
  repeated ContactProto contact = 3;
}

message PhoneProto {
  required string phoneNumber = 1; // phone number to bind
  required string countryCode = 2;
  required int32 verifySMS = 3; // 0: no need to verify, 1: need to verify, default value is 0
}
message PhotoContactProto {
  required string phoneNumber = 1;
  optional string jid = 2;
  optional string firstName = 3;
  optional string lastName = 4;
  optional string picUrl = 5;
}
message PhoneContactListProto {
  repeated string phoneNumber = 1; // contact for 2.0 clients
  repeated PhotoContactProto contact = 2; // contact for 2.5 or higher clients
}

message RoomConnector {
  enum Event {
    ON    = 0; // RC is online
    OFF   = 1; // RC is offline
    JOIN  = 3; // Join a meeting
    LEAVE = 4; // Leave a meeting
    KEEP_ALIVE = 5; // keep alive
    SEND_CODE  = 6; // send pairing code
    DROP_CODE  = 7; // drop pairing code
  }
  required Event event = 1;
  required string rcId = 2;
  optional string requestId = 3; // request uuid for re-send same event if timeout
  required string ip = 4;
  optional string version = 5;
  optional string meetingId = 6;
  optional int64 meetingNumber = 7;
  optional string token = 8; // token configured in vrc, containing account id info
  optional string pairingCode = 9;
}


message ZoomPresence {
  enum Event {    
    JOIN = 0;
    LEAVE = 1;
    KEEP_ALIVE = 2;     //in meeting keep a live
    ALERT = 3;
    ALIVE = 4;          //room keep alive
  }
  enum AlertName {
    HEARTBEAT                   = 1;  // 1
    ZRC_CONNECTION              = 2;  // 0/1
    MICROPHONE                  = 3;  // 0/1
    SPEAKER                     = 4;  // 0/1
    CAMERA                      = 5;  // 0/1
    IM                          = 6;  // int value: 0-ok, other-problem
    IPAD_CHARGE                 = 7;  // 0/1
    IPAD_POWER                  = 8;  // 0-100
    NETWORK_STATUS              = 9;  // 1
    SELECTED_MICROPHONE_REMOVED = 10; // 0/1
    SELECTED_SPEAKER_REMOVED    = 11; // 0/1
    SELECTED_CAMERA_REMOVED     = 12; // 0/1
    HIGH_CPU_USAGE              = 13; // 1
	CONTROLLER_BATTERY_DYING    = 14; // 0/1
	ROBOTIC_AUDIO				= 15; // int value indicates the actions need to be taken: auto_login 2 << 0, auto_restart 2 <<1, manual_reboot = 2<<2
	OS_ADUIO_ERROR              = 16; // 0 normal; 1 OS audio error 
	AUTO_LOGIN_ENABLED          = 17; // 0 disabled; 1: enabled
	SYSTEM_START_TIME           = 18; // running time of the room since last started (int seconds)
	SELECTED_MICROPHONE         = 19;
	SELECTED_SPEAKER            = 20;
	SELECTED_CAMERA             = 21;
	ZR_PROCESS_STATUS           = 22;
  }
  enum AlertValueType {
    INT_TYPE                 = 1;  
    STRING_TYPE              = 2;
  }
  message Alert {
    required AlertName name = 1;
    optional int32 value = 2;
	optional int64 alertTime = 3;  //seconds of current time
    optional AlertValueType valueType = 4; //default INT_TYPE
    optional string strValue = 5;
  }
  required Event event = 1;
  required string userId = 2;
  optional int64 meetingNumber = 3;
  optional string meetingId = 4;
  optional string accountId = 5;
  optional string roomName = 6;
  repeated Alert alert = 7;
}

message AlternativeHost {
  required string id = 1;
  optional string email = 2;
  optional string firstName = 3;
  optional string lastName = 4;
  optional string picUrl = 5;
  optional int64 pmi = 6; // PMI meeting number
}

message ColocationRegion {
  required string region = 1;
  required string vip = 2;
}

message Request {
  optional MeetingProto meeting               = 1;
  optional CallProto call                     = 2;
  optional MeetingStatusListProto statusList  = 3;
  optional UICommandListProto commands        = 4;
  optional LogListProto logs                  = 5;
  optional ContactListProto contacts          = 6;
  optional PhoneContactListProto phoneContacts = 7; // phone contacts list
  optional RoomConnector roomConnector        = 8; // room connector
  optional RecordingProto recordingProto        = 9; // recording
  optional ZoomPresence zoomPresence	      = 10; //zoom presence
}

message SSODomain {
  required string url       = 1;
  optional string name		= 2; 
}

message ServerDomain {
  optional string xmpp            = 1; // xmpp server domain for phone
  optional string nos             = 2; // nos server non-SSL domain
  optional string nosSSL          = 3; // nos server SSL domain
  optional string file            = 4; // file server domain
  optional string xmppDesktop     = 5;  // xmpp server domain for desktop IM
  optional string xmppMobile      = 6;  // xmpp server domain for mobile messenger
  optional string pollingService  = 7;  // polling service server domain
  optional string zpAlert         = 8;  // domain for ZR report monitoring status
  repeated SSODomain ssoDomains   = 9;
  optional string fileImage       = 10; // file server domain for images and audio files
}

message RCUserStub {
  required string uid       = 1;
  optional string phone		= 2; 
  optional string ext		= 3;
}

message RCUsers{
  repeated RCUserStub rcuser = 1;
}

message Response {
  required int32 result                       = 1;
  optional string errorMessage                = 2;
  optional MeetingProto meeting               = 3;
  optional MeetingListProto meetings          = 4;  // upcoming meetings
  optional UserProfile profile                = 5;
  optional FriendListProto friends            = 6;
  optional string options                     = 7;
  optional int32 forceUpdate                  = 8;
  optional string nosToken                    = 9;
  optional string clientVersion               = 10; // client version in release notes API; airhost version in join meeting and start instant meeting API
  optional string releaseNotes                = 11;
  optional string autoUpdate                  = 12; // for client auto-update
  optional string zoomToken                   = 13; // zoom login token for client auto login
  optional string recommendSubject            = 14; // recommend email subject
  optional string recommendBody               = 15; // recommend email body
  optional MeetingListProto previousMeetings  = 16; // previous meetings
  optional ContactListProto contacts          = 17;
  optional string ssoLogoutUrl                = 18; // sso logout url, should be called in client side
  optional PhoneContactListProto phoneContacts = 19; // phone contacts list
  optional PhoneProto phone                   = 20; // phone info
  optional string jid                         = 21; // phone JID
  optional string xmppToken                   = 22; // phone xmpp token
  repeated AlternativeHost altHost            = 23; // schedule for alternative hosts 
  repeated ColocationRegion coRegion          = 24; // colocation regions for client to ping to choose the faster one as user's region
  optional string deviceUserId                = 25; // device user id on phone
  optional string fsPVK                       = 26; // file server private key
  optional ServerDomain serverDomain          = 27;
  optional string oldPhoneJID                 = 28; // old 2.5 phone JID
  optional CountryCodeListProto countryCodes  = 29; // Country codes list for call out
  optional RecordMeetingListProto recordings  = 30; // recorded meeting list.
  optional string ssoVanityUrl                = 31; // sso vanity url to redirect to sso login
  optional string buddyJid		              = 32; // invite buddy's jid
  optional PACInfo pacInfo                    = 33; //PAC info for outlook plugin.
  optional RCUsers rcusers                    = 34; //Ringcentral use only
  optional string calloutBlockNumbers		  = 35; //callout block numbers
  repeated NumberProto numbers                = 36; //all toll and toll-free number configured in web DB
  optional string encryptedSignature		  = 37; // user signature encrypted by server private key, Base64 encoded
  optional IPInfo ipInfo		              = 38;	//client ip info
}

message IPInfo{
  optional string ip = 1;
  optional string country = 2;
}


message NumberProto{
  required string number =1;
}
/////////////////////////////
// client use-only

message ProxyServer {
  required int32 type = 1;
  optional string host = 2;
  optional string uname = 3;
  optional string upsw = 4;
  optional int32 port = 5;
  optional int32 authtype = 6;
}

message ProxyServerMap {
  required string host = 1;	
  repeated ProxyServer server = 2;
}

message SDKContext{
  repeated ProxyServerMap proxyservers = 1;	
}

message LaunchConfParameter
{
	optional int32 launchReason 				= 1;		//Launch conference reason: preload, start, join, reconnect, ...
  optional int64 launchConfOption			= 30; //Last.
		
	optional MeetingProto meeting 			= 2; 		//Init meeting object, it may be EMPTY (only stored limited information)
	
	//user profile information
	optional string userName 						= 3;
	optional string userZoomId 					= 4;
	optional string userSnsId 					= 5;
	optional int32 userSnsType 					= 6;
	optional string userBigPicUrl 			= 7;
	optional string userLocalBigPic 		= 8;
	optional string userSmallPicUrl 		= 9;
	optional string userEmail 					= 10;
	
	//client GUID or relative
	optional string clientGUID 					= 11;
	optional string confUserUUID 				= 12; 		//used for recovery.
	optional string clientDeviceID 			= 13;
	optional string clientDeviceInfo 		= 14;
	
	//p2p information
	optional int32 p2pNatType 					= 15;
	optional string p2pPublicIp 				= 16;
	optional string p2pUpnpSupport 			= 17;
	optional string p2pLocalIp 					= 18;
	optional string p2pExternIp 				= 19;
	optional int32 p2pUpnpPort 					= 20;
	optional string p2pPingIp 					= 21;
	
	//invitation information
	optional int32 inviteeCount 				= 22;
	optional string callBuddyName 			= 23;
	optional string callBuddyLocalPic 	= 24;
	optional string callBuddyLocalSmallPic	= 26;
	optional string callBuddyPhoneNumber		= 27;	
	
	optional string recordingPath				= 25;
	
	//New added for recovery log
	optional int32  reconnectReason			= 28;
	optional int32  reconnectErrorCode	= 29;
	
	optional string appContext 					= 31;	//Application level context, 30 is used by launchConfOption
	optional string panalistkey					= 32;	//for webinar support.
	
	optional string callBuddySessionID			= 33;
	optional string webinarToken				= 34;	//for webinar.
	
	optional string webinarJID					= 35;	//webinar attendee JID.
	optional string webinarXmppToken		= 36;	//webinar token.
	optional string webinarXmppServer	= 37;	//webinar Xmpp server, ther port should always be 443.
	
	optional int64 userOptions					= 38;
	optional string keepVoip						= 39;	//For Android SDK only.
	optional string browserType					= 40;		//This parameter is transferred from web, used for Windows only; if no web join/start/..., it's empty.
	optional string nosConnectionState          = 41;		//NOS connection state.
	optional int64  zoomFeatureControl        = 42;			//ZC parameter from web.
	optional int64  cmrIndex					        = 43;			//For reconveryCMR.
	optional string messageToShare			 = 44;			//For BBM specified task..., if we have such string, we'll join meeting and send out message ...	
	optional string boID = 45;		//BO ID
	optional string boToken = 46;	//BO meeting token
	optional string boTitle = 47;	//BO meeting title
	optional bool	boHost = 48;	//BO host or not
	optional string webinarPollingServer	= 49;	//webinar polling server, ther port should like polling.zoom.us.
	optional bool boOriginalHost = 50;	//is Host in master coference before join/leave BO
	optional string boAssignData = 51; //save BO assign data to PT to fix MMR crash issue
	optional SDKContext sdkcontext = 52;
	optional int64 userOptions2		= 53;
	optional string vanityMeetID    = 54;	
	
	optional ServerDomain serverDomain  = 55;
	
	optional string directJoinParamsFromWeb = 56;
	optional int32 directJoinParamsIsFull = 57;
}
//
/////////////////////////////

message RecordingProto {
  required string meeting_id	= 1; // meeting instance id of the recording
  required int64 start	= 2; // recording start time, 1+2 will be unique
  optional int64 end	= 3; // recording end time
  optional int32  status	= 4; // recording status, 1: start, 200 completed (encode, upload to s3 etc.)
  repeated int64 file_size	= 5; // file size in byte
  repeated string file_name	= 6; // s3://zoomdev-log/cmr/<meeting-number>/<meeting-id>-<meeting_topic>/xxx.mp4
  optional string video_poster	= 7; // width: 160px, height: 90px  s3://zoomdev-log/cmr/<meeting-number>/<meeting-id>-<meeting_topic>/xxx.jpg
  optional int32  video_width	= 8; // video size width in px
  optional int32  video_height	= 9; // video size height in px
}

message RecordMeetingListProto {
  repeated RecordMeetingProto meeting = 1;
}
message RecordMeetingProto {
  required string id                     = 1; //meeting instance id
  optional int64  meetingNumber          = 2;
  optional string topic                  = 3;
  optional int64  startTime              = 4; //actual start time
  optional int32  duration               = 5; //minutes
  required string recordingUrl  = 6; //https://rocky.zoom.us/recording/<id>
}

message PACInfo {
  repeated PACMeeting pacMeetings = 1;
}

message PACMeeting {
  optional int64 pacMeetingNumber = 1; 
  repeated CountryCodeProto tollNumberList = 2;
  repeated CountryCodeProto tollFreeNumberList = 3;
  optional string invitationEmail = 4;
}